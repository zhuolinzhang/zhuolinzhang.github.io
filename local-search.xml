<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>访问CERN的有关步骤</title>
    <link href="/2023/07/27/steps_for_visiting_cern/"/>
    <url>/2023/07/27/steps_for_visiting_cern/</url>
    
    <content type="html"><![CDATA[<h2 id="申请签证"><a href="#申请签证" class="headerlink" title="申请签证"></a>申请签证</h2><ol><li>需要在ATLAS提交长期（&gt;90天）邀请信申请，网址：<a href="https://atlas-secretariat.web.cern.ch/invitation-letters">https://atlas-secretariat.web.cern.ch/invitation-letters</a></li><li>随后需要在France-visas网站填写签证申请表格，网址：<a href="https://france-visas.gouv.fr/zh/web/france-visas/accueil">https://france-visas.gouv.fr/zh/web/france-visas/accueil</a></li></ol><p>填写表格相关问题：</p><ul><li>Step1中”Your plans”选择”Taking up of official duties / ordinary passport”</li><li>Step4中”Your plans for staying”填写</li><li>Step5</li></ul><h2 id="其他准备"><a href="#其他准备" class="headerlink" title="其他准备"></a>其他准备</h2><ol><li>EDH pre-registration? Home Institution Declaration?</li><li>护照</li><li>邀请信</li><li>法国居留卡（由User office提供）</li><li>3张护照标准尺寸证件照</li></ol><p>参考网址</p><ul><li><a href="https://usersoffice.web.cern.ch/documents-non-european-citizens-long-term-big">https://usersoffice.web.cern.ch/documents-non-european-citizens-long-term-big</a></li><li><a href="https://usersoffice.web.cern.ch/edh-pre-registration-form">https://usersoffice.web.cern.ch/edh-pre-registration-form</a></li><li><a href="https://usersoffice.web.cern.ch/non-eu-non-schengen-newcomers">https://usersoffice.web.cern.ch/non-eu-non-schengen-newcomers</a></li></ul><h2 id="山大派出流程"><a href="#山大派出流程" class="headerlink" title="山大派出流程"></a>山大派出流程</h2><ol><li>国际事务部申请系统：<a href="www.cgcj.sdu.edu.cn/infoplus/form/YJSYGCGJSBB/start">www.cgcj.sdu.edu.cn/infoplus/form/YJSYGCGJSBB/start</a></li><li>与此同时，研究生需至少出国前两周在研究生信息管理系统提交出国申请，同时将《山东大学因公出国、赴港澳申报表》、邀请函复印件及翻译件等全部材料备齐，交导师、培养单位审核，导师系统审核通过后，培养单位系统审核通过，随后提前一周汇总符合要求的纸质材料办理线下手续。</li></ol><p>研究生系统所需材料清单：</p><ul><li>《山东大学因公出国、赴港澳申报表》其中出境时间、入境时间：是指出发时从大陆出境时间、出访结束后入境大陆的时间（切记入境时间不要填错。）若有时差，所填出境时间可提前1天，入境时间可延后1-2天；经费须如实填写，不得空项；费用代码说明：每个方格都要填写相应数字代码；如为“其他”，须注明经费来源名称；所在学院意见：分管负责人签字（如经负责人同意后加盖负责人名章代替负责人签字的，则盖章人须在名章旁签字确认）</li><li>正式邀请函/入学通知书（复印件）及中文翻译件1份（非英语邀请函翻译件需经导师签字，学院审核确认；英语邀请函翻译件无需导师签字/学院确认）。邀请函须由机构正式抬头纸签发，有外方机构负责人或外导签字。邀请函须记载具体出访起止日期，派出起止时间须包含在邀请函起止日期以内。</li><li>派出项目证明材料1份（国家留学基金资助出国留学资格证书复印件中英文）。</li><li>培养单位须对研究生进行思想政治审核，合格方可派出（审核材料由培养单位留存，无需提交学校）</li><li>青岛校区还需青岛学工部要求的由研究生家长签字的《家长知情同意书》。</li></ul><h2 id="有用网址"><a href="#有用网址" class="headerlink" title="有用网址"></a>有用网址</h2><ul><li>找房子CERN marketplace：<a href="https://marketplace.web.cern.ch/">https://marketplace.web.cern.ch/</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>A Note on Analysis Based on MC Generators</title>
    <link href="/2021/06/29/A-Note-on-Analysis-Based-on-MC-Generators/"/>
    <url>/2021/06/29/A-Note-on-Analysis-Based-on-MC-Generators/</url>
    
    <content type="html"><![CDATA[<p>这几天主要在玩<code>MadGraph5@NLO</code>，正好轴子的工作也需要好好玩MadGraph，一举两得。这一周实验上的工作是需要看一看理论上的$p p \rightarrow z \rightarrow z h$的微分截面关于$p_T^{dijet}$的分布。 在此过程中遇到了很多问题。目前我已经熟练地掌握了用MadGraph产生MC样本以及对其分析的技巧。尽管我本科就玩过，当时没有玩明白。madgraph的语法非常简单，通常我们用madgraph产生样本之后，用Pythia8做parton shower/hadronization，随后用Delphes对Pythia8产生的文件做探测器模拟。每一个环节都可以在card里修改参数，得到我想要的结果。</p><p>Madgraph在parton level会产生<code>.lhe</code>文件。这个文件是一个XML语法的文本文件。读法参见<a href="https://arxiv.org/abs/hep-ph/0609017">arXiv:hep-ph/0609017</a>和<a href="https://arxiv.org/abs/hep-ph/0109068v1">arXiv:hep-ph/0109068v1</a>。LHE文件详细地给出了每个事例的物理过程。Pythia8会输出一个<code>.hepmc</code>文件。这个文件目前我还不知道是怎么读的。但是今晚找到了HepMC的官网，读取问题有望得到解决。MadAnalysis可以直接从<code>.lhe</code>和<code>.hepmc</code>中做我们需要的直方图。如果我们需要的直方图在自动生成范围外，可以在MadAnalysis的card里输入我们需要的直方图。Delphes最后输出的是一个ROOT文件。这倒省事了。下面我来总结一下我目前遇到的坑。</p><h2 id="Madgraph"><a href="#Madgraph" class="headerlink" title="Madgraph"></a>Madgraph</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>Madgraph的语法非常简单。从<a href="https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/InputEx">MadgraphWiki</a>摘录如下：</p><blockquote><ul><li><p>Use a “&gt;” to separate the initial state particle(s) from the final state ones.</p></li><li><p>Initial state can be one (decay) or two (scattering) particles.</p></li><li><p>Use “ x x &gt; z &gt; y y y “ form to require particle z to appear in a s-channel intermediate state (not recommended due to gauge invariance).</p></li><li><p>Use “ x x &gt; y y y $ z” form to forbid particle z from appearing in a s-channel intermediate state (not recommended due to gauge invariance).</p></li><li><p>Use “ x x &gt; y y y / z” form to exclude particle z to appear as internal particle in any diagram.</p></li><li><p>Use comma to specify decay chains. For instance “x x &gt; Z W, Z &gt;y y, W &gt; k k” means “x x &gt; Z W” where Z then decays to yy and W to kk.</p></li><li><p>Coupling orders are automatically detected to generate the leading order processes. To explicitly specify coupling orders, add them after the process on the same line:<br>x x &gt; y y y / z QCD=0<br>x x &gt; Z W QED=2, Z &gt; y y, W &gt; k k<br>Note that if a coupling order is omitted, it defaults to infinity (or, for restricted couplings such as HIG in the HEFT model, to the restricted value).</p></li><li><p>Use the multi-label “p” to indicate a proton or an anti-proton.<br>The symbol “p~” does not exist. In fact the type of initial state (pp or ppbar or parton-parton fixed energy) is specified later, during the run, in the run_card.dat.<br>The multi-lable “j” suggests a final-state jet.</p></li><li><p>Note that the syntax for <a href="https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/MadGraph">MadGraph</a> 5 differs slightly from previous versions: a space (“ “) is required between particle names, and the decay chain syntax has been upgraded to a more powerful syntax which allows better control of the different processes.</p></li></ul></blockquote><p>这里说的是<code>generate</code>的语法。在<code>generate</code>之后执行<code>output name</code>就会在<code>bin</code>目录下产生一个<code>name</code>子目录。里面的<code>index.html</code>上有MC运行的结果和过程的费曼图信息。随后执行<code>launch</code>就进入了执行界面。在执行时可以输入数字对应的开关，切换和开关各个选项。缺少的模块可以使用<code>install</code>安装。例如</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">install</span> pythia<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>就会自动下载安装Pythia8。选项部分结束后，可以更改涉及到的所有card。完成上述所有过程，MC就开始跑了。</p><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>MadGraph5 v3.1.x似乎对语法的要求更严格了，很多以前可以run通的语法在这个版本会报错。这时候需要修改设置。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">set</span> acknowledged_v3<span class="hljs-number">.1</span>_syntax <span class="hljs-literal">true</span> <span class="hljs-comment">--global</span><br></code></pre></td></tr></table></figure><p>这样MadGraph v2.x的语法也可以使用了。</p><p>在WSL里使用是还有很多额外的坑。因为WSL自带的包比较少，所以会出现画不出费曼图的问题。安装gs就可以解决这个问题。在Ubuntu中，可以通过apt直接安装gs。此外，MadAnalysis需要pdflatex才能生成PDF的分析报告，这也需要注意。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>MadAnalysis可以直接分析<code>.lhe</code>文件。此外，我们还可以使用<code>ExRootAnalysis</code>将<code>.lhe</code>变成<code>.root</code>。安装方法同上，傻瓜式安装。这样就可以产生我们这些实验民工喜欢的ROOT文件了。我们既可以在MadGraph里打开开关让它在运行的同时直接把<code>.lhe</code>变成<code>.root</code>，也可以进入ExRootAnalysis所在的文件夹，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./ExRootLHEFConverter &lt;input .lhe file&gt; &lt;output .root file&gt;<br></code></pre></td></tr></table></figure><p>就能将<code>.lhe</code>文件转化成<code>.root</code>文件。</p><p>查看这个ROOT文件，需要在root里输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">gSystem-&gt;<span class="hljs-built_in">Load</span>(<span class="hljs-string">&quot;libExRootAnalysis.so&quot;</span>)<br></code></pre></td></tr></table></figure><p>才能正确查看。当然，写一个<code>rootlogon.C</code>就不用每次打开文件都要这么敲一遍了。</p><h2 id="Pythia8"><a href="#Pythia8" class="headerlink" title="Pythia8"></a>Pythia8</h2><p>我们通常使用Pythia8做parton shower和hadronization。Pythia8会产生一个<code>.hepmc</code>文件。非常大。看起来我这里使用的Pythia 8.245会产生HepMC2文件。HepMC2与HepMC3是不一样的。此前我一直不清楚怎么分析这个文件，但是今晚无意间发现了这个网站<a href="http://hepmc.web.cern.ch/hepmc/index.html">HepMC3 event record library: Main page (cern.ch)</a>。看起来这个问题有望得到解决。</p><p>而且conda-forge里有HepMC3和HepMC2的包。参见<a href="https://anaconda.org/conda-forge/hepmc2">Hepmc2 :: Anaconda.org</a>。也许这下连安装都不用了。这两天我来试一试。</p><h2 id="Delphes3"><a href="#Delphes3" class="headerlink" title="Delphes3"></a>Delphes3</h2><p>CMS使用Geant4做探测器模拟。但是MadGraph没有集成Geant4，集成了Delphes。安装方法同上。可以看到Delphes的cards里就有CMS的card。当然，因为CMS官方不使用Delphes，这个card的内容可能还需要检验。</p><p>Delphes最后会产生一个<code>.root</code>文件。这下终于不用转换了。与ExRootAnalysis类似，在root中加载动态链接库才能正确读取Delphes产生的ROOT文件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">gSystem-&gt;<span class="hljs-built_in">Load</span>(<span class="hljs-string">&quot;libDelphes.so&quot;</span>)<br></code></pre></td></tr></table></figure><p>目前macOS Big Sur不能正确地安装Delphes，编译到某个步骤会报错，不幸的是我的x86的Mac Mini也中招了。我在官网看到3个有关的tickets了。需要Delphes官方修复。</p><p>Delphes产生的ROOT文件并不是一个flat TTree。我用<code>RDataFrame</code>也没读出来。不是说<code>RDataFrame</code>一定不行，我的<code>RDataFrame</code>学的不好。<code>RDataFrame</code>对cpp的要求相对来说比较高，我的cpp水平不太好，学不下去。但是用<code>TTreeReaderArray</code>可以读。</p><p>官方推荐使用<code>ExRootTreeReader</code>做分析。没错，就是上面的<code>ExRootAnalysis</code>。目前没有时间学这个。先用<code>TTreeReaderArray</code>做吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CMS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Madgraph5 Notes</title>
    <link href="/2021/06/22/Madgraph5-Notes/"/>
    <url>/2021/06/22/Madgraph5-Notes/</url>
    
    <content type="html"><![CDATA[<h1 id="SMEFT-model"><a href="#SMEFT-model" class="headerlink" title="SMEFT model"></a>SMEFT model</h1><h1 id="Parton-Shower"><a href="#Parton-Shower" class="headerlink" title="Parton Shower"></a>Parton Shower</h1><h2 id="调用pythia8出现的错误"><a href="#调用pythia8出现的错误" class="headerlink" title="调用pythia8出现的错误"></a>调用pythia8出现的错误</h2><h4 id="Splitting-lhe-event-file-for-PY8-parallelization…-后迅速出现错误"><a href="#Splitting-lhe-event-file-for-PY8-parallelization…-后迅速出现错误" class="headerlink" title="Splitting .lhe event file for PY8 parallelization… 后迅速出现错误"></a>Splitting .lhe event file for PY8 parallelization… 后迅速出现错误</h4><p>可能是pythia8的并行计算出现了问题，在madgraph中输入</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> nb_core <span class="hljs-comment">1</span><br></code></pre></td></tr></table></figure><p>后关闭并行计算，重新<code>launch</code>即可避免此错误。</p><h4 id="PYTHIA-Abort-from-Pythia-Pythia-unmatched-version-numbers-in-code-8-235-but-in-XML-8-230"><a href="#PYTHIA-Abort-from-Pythia-Pythia-unmatched-version-numbers-in-code-8-235-but-in-XML-8-230" class="headerlink" title="PYTHIA Abort from Pythia::Pythia: unmatched version numbers : in code 8.235 but in XML 8.230"></a><code>PYTHIA Abort from Pythia::Pythia: unmatched version numbers : in code 8.235 but in XML 8.230</code></h4><p>对于我来说是因为通过<code>conda</code>安装了<code>ROOT</code>，并且在<code>conda</code>的<code>ROOT</code>环境中运行了madgraph。而我的<code>ROOT</code>环境中的<code>pythia8</code>版本与madgraph安装的pythia8版本不一致。在<code>conda</code>环境外重新安装运行madgraph即可避免此问题。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Axion Work Process</title>
    <link href="/2021/06/22/Axion-Work-Process/"/>
    <url>/2021/06/22/Axion-Work-Process/</url>
    
    <content type="html"><![CDATA[<h2 id="2021-08"><a href="#2021-08" class="headerlink" title="2021-08"></a>2021-08</h2><h3 id="14"><a href="#14" class="headerlink" title="14"></a>14</h3><p>今天用<code>MadGraph5</code>尝试做了一下MC模拟。因为最近对于EFT的学习以及和万老师再次讨论有了思路。</p><p>在<code>SMEFTatNLO</code>模型中，我们通过</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">import model SMEFTatNLO-full<br>generate g g &gt; z z <span class="hljs-attribute">QCD</span>=2 <span class="hljs-attribute">QED</span>=2 <span class="hljs-attribute">NP</span>=2 NP^<span class="hljs-attribute">2</span>=2 [<span class="hljs-attribute">virt</span>=QCD]<br></code></pre></td></tr></table></figure><p>生成MC样本。最后可以得到$gg \rightarrow h \rightarrow zz$ 过程和$gg\rightarrow zz$的box图的干涉。这也是万老师希望做的。但是今天又跟万老师讨论了一下发现她有需要去做一个有ALP的样本。那么我们就不能用<code>SMEFTatNLO</code>来完成这项工作。</p><p>在<code>Feynrules</code>网站上，我找到了一个UFO，即<code>ALP_linear_UFO</code>。这个模型倒是有我们想要的$gg\rightarrow a \rightarrow zz$过程，但是它不能处理NLO过程。所以最后这项工作恐怕还需要自己写一个<code>Feynrules</code>的UFO来处理。</p><p>今天遗留的问题：</p><ul><li>既然昨天的讨论中说，ALP的有效顶点与Higgs的有效顶点是一样的，那么为什么我们不能直接改Higgs的质量把它当作ALP？</li><li>在<code>ALP_linea_UFO</code>中，ALP的PDG ID是9000005，这该怎么理解？</li><li>为什么<code>SMEFTatNLO-full</code>包含了$ggH$过程？之前用写入了cpq3i、cpW、cpWB的restrict card去产生$ggH$过程却失败了，这是为什么？相比<code>SMEFTatNLO-full</code>，缺少了什么Wilson coefficients？或者是Yukawa coupling constant？</li></ul><p>可能需要做的事情：</p><ul><li>学习如何写<code>Feynrules</code>UFO；</li><li>考虑用JHUGen或者POWHEG去产生这些过程。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>ALP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>The Experiment Log of The Study of HIG-18-016</title>
    <link href="/2021/05/04/The-Experiment-Log-of-The-Study-of-HIG-18-016/"/>
    <url>/2021/05/04/The-Experiment-Log-of-The-Study-of-HIG-18-016/</url>
    
    <content type="html"><![CDATA[<h1 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h1><h2 id="May"><a href="#May" class="headerlink" title="May"></a>May</h2><h3 id="04"><a href="#04" class="headerlink" title="04"></a>04</h3><p>学习<code>python</code>中的类，主要阅读《python学习手册》一书的内容。第六部分还有两章，但是看不下去了。看程序书实在是枯燥。</p><p>这两周（至5.13）需要完成的任务有：</p><ol><li>检查用不同的代码生成的<code>TTree</code>作图却产生迥异结果的原因</li><li>重构画图代码</li><li>写一个计算cutflow的小程序</li></ol><p>当前思路：</p><ol><li>首先检查老代码的cut条件与新代码的cut条件是否一致。随后可以重新提交老代码。之后利用<code>uproot</code>，将信号样本的<code>TTree</code>导出成文本文件。随后，利用<code>difflib</code>检查两个文本文件的区别在哪里。如果新代码的结果是老代码的子集，那么检查新代码的flat <code>TTree</code>文件。但我感觉这样有可能依然无法找到问题所在。</li><li>将脚本完全写成OOP的。将一些方法，例如scale，放在class histogram中。最好能抛弃exec的动态调用，再class histogram中加入一些属性，实现直方图分类。另外，做ratio图部分的代码也需要重构。尽量避免复制粘贴一段代码的事情，减少维护的工作量。此外，可以考虑将信号的stack图改成将信号放大1000倍（举个栗子）的形式。</li><li>将结果输入成<code>numpy</code>矩阵。根据文件名？分类。Then, scale the number and sum it. We should also calculate the ratio of pass and all. In the end, we can get the final result.</li></ol><p>任务很重，后面几天到8号没有集中的学习的时间，需要抓紧。</p><h3 id="05"><a href="#05" class="headerlink" title="05"></a>05</h3><p>阅读《python学习手册》（第四版）32章-33章，33章未看完。</p><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>修改以前写的cut好的<code>ZHNtuple</code>程序，与新的不做cut的程序的变量命名和cut条件保持一致。并提交给CRAB。</p><p>一个可能的问题的解决方法：如果<code>scram b</code>没有激活<code>edmplugin</code>，运行cmsRun提示<code>Unable to find plugin &#39;&#39; in category &#39;CMS EDM Framework Module&#39;.</code></p><p>彻底清除cache，删掉警告的存在重复命名的目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scram b distclean &amp;&amp; scram b vclean &amp;&amp; scram b clean<br></code></pre></td></tr></table></figure><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p>找到了存在4日任务1问题的原因。老的workflow，即保存cut后的<code>TTree</code>的analyzer脚本是正确的。在我之前的workflow中，我找到的muon和jet对都是我希望所找的。而在当前的workflow中，我为了图省事，全部选取了leading particles作为筛选对象。但实际上，leading particle不一定满足我需要的cut条件。而这种情况下，显然不能只选取leading particles去做cut。只能说如果全部cut完，还有多个粒子对满足条件，此时再选取leading particles作为我需要的粒子。</p><p>但是只是找到了原因。怎么改还是毫无头绪。应该把我的workflow反过来，先cut再把<code>TTree</code>变成flat。但我不知道<code>RDataFrame</code>怎么去做非flat <code>TTree</code>的cut。我之前想着加All但是目前发现这样好像行不通。muon貌似正常，jet总是不对。莫名其妙。</p><p>重构代码进度缓慢。目前大概把新的hist类写完了。离完成还差得远。先解决上一个问题再说吧。</p><h3 id="12"><a href="#12" class="headerlink" title="12"></a>12</h3><p>虽然确定了问题，但是找不到解决方案。<code>RDataFrame</code>似乎无法解决问题。其中的<code>Filter</code>方法只能对每一个事例做判选。没有办法实现我想要的功能。即：loop每一个事例中的vector，留下我想要的元素，剔除我不要的元素。我写了一个lambda函数，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">d.<span class="hljs-built_in">Filter</span>([](std::vector&lt;<span class="hljs-keyword">float</span>&gt; &amp;mu1Pt, std::vector&lt;<span class="hljs-keyword">float</span>&gt; &amp;mu2Pt)&#123;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i1 : mu1Pt) &#123;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i2 : mu2Pt) &#123;<span class="hljs-keyword">if</span> (i1 &gt; <span class="hljs-number">25</span> &amp;&amp; i2 &gt; <span class="hljs-number">15</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;&#125;&#125;&#125;, &#123;<span class="hljs-string">&quot;mu1Pt&quot;</span>, <span class="hljs-string">&quot;mu2Pt&quot;</span>&#125;, <span class="hljs-string">&quot;Muon pt&quot;</span>);<br></code></pre></td></tr></table></figure><p>但不幸的是它只能loop每一个vector的第0个元素。所以恐怕<code>RDataFrame</code>无法解决这个问题。</p><p>目前的思路是利用<code>TTreeReader</code>，重写muon1，muon2，jet1，jet2四个vector，随后对这4个vector进行判选，同时也需要避免重复。</p><p>但我认为与其这么麻烦还不如回到老的workflow上去。</p><h3 id="14"><a href="#14" class="headerlink" title="14"></a>14</h3><p>总算是将任务1全部完成了。新代码完全使用<code>TTreeReader</code>，损失了一些速度，但是物理是正确的。而且加入了cutflow的功能。相比原来的代码功能上保持了一致。</p><p>想想最开始写cutflow的时候是加上不同的cut条件画出不同的不变质量谱。复制粘贴了好几个for循环。又丑又笨。当你在复制粘贴程序的时候就应该意识到写一个函数来完成这些操作。而不是复制粘贴。这次用了相对巧妙一些的办法。每通过一个cut条件，计数器+1，最后选取这一个entry里得分最高的作为这个entry的分数。随后根据不同的分数计算cutflow。目前看这么做可行。</p><p>目前还有一点隐忧就是cut好的analyzer出来的TTree的事例数与这种方法出来的事例数仍然有100左右的差距。需要通过<code>uproot</code>导出然后利用<code>pandas</code>比较差异。看看到底怎么回事。</p><p>接下来就可以全力以赴重构画图脚本了。当然cutflow的事情还不算完，还需要写一个脚本把这些cutflow归类处理。希望可以利用<code>pandas</code>完成这项工作。</p><h3 id="17"><a href="#17" class="headerlink" title="17"></a>17</h3><p>I have fixed bugs in the new skim macro. But There is still one problem in the new macro. An event passed all selections in the new workflow, but this event can’t pass all selections in the old workflow. I don’t understand the reason. Let me add the cutflow function in the old macro, then, the reason may come out.</p><h3 id="30"><a href="#30" class="headerlink" title="30"></a>30</h3><p>很久没有更新了。因为太忙有时候就忘了更新，久而久之就不记得了。</p><p>这一段时间完成了从旧的workflow向新的workflow的切换。彻底修好了skim脚本的bug。彻底重构了画图脚本。这也是我第一次写的面向对象的程序。目前，根据CMS的要求，下一周要把数据从ReReco切换到UL。</p><p>此外，跟老板讨论了申请博士的问题。前景依然不明朗。</p><p>此外还要接一个唯象的工作，分析AZZ。A指axion。不知道我已经快要还光的理论知识还能不能hold住这个题目。但是别无他法。毕竟实验的工作前景不明朗。</p><h2 id="June"><a href="#June" class="headerlink" title="June"></a>June</h2><h3 id="22"><a href="#22" class="headerlink" title="22"></a>22</h3><p>在12号的大组会上给了报告。报告本身挺翻车的。但是事后的建议让我认识到了组里的高效。我认为有时间的话还是应该将分析从MINIAOD迁移到NANOAOD上。NANOAOD的工具比MINIAOD要简单非常多。</p><p>目前需要做的事情是把$\sigma \times BR$关于$p_T$和$m_{dijet}$的分布给做出来。这个图在之前的CMSDAS的long exercise上做过。但当时只是作图，没有把代码看清楚。我不是很清楚通过combine计算出来的signal strength是怎么转化为limit的。如果这个问题搞明白了后面就简单了。</p><h3 id="28"><a href="#28" class="headerlink" title="28"></a>28</h3><p>MC的一些总结参见：<a href="https://zhuolinzhang.github.io/2021/06/29/A-Note-on-Analysis-Based-on-MC-Generators/">A Note on Analysis Based on MC Generators - Zhuolin’s blog (zhuolinzhang.github.io)</a></p><p>目前我需要看理论的$p p \rightarrow z h$的微分截面关于$p_T^{dijet}$的分布。怎么看呢？要么手算，要么用MC generator生成。我选择后者。</p><p>这个样本</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">dataset</span>=/ZH_HToBB_ZToLL_M<span class="hljs-number">125</span>_<span class="hljs-number">13</span>TeV_powheg_pythia<span class="hljs-number">8</span>/RunIIAutumn<span class="hljs-number">18</span>MiniAOD-<span class="hljs-number">102</span>X_upgrade<span class="hljs-number">2018</span>_realistic_v<span class="hljs-number">15</span>-v<span class="hljs-number">2</span>/MINIAODSIM<br></code></pre></td></tr></table></figure><p>却使用powheg产生的。很不幸，我没用过powheg。这几天为此颇费脑筋。</p><p>首先我在本地用MG5产生了一个</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">generate</span> p p &gt; z &gt; z h, z &gt; mu+ mu-, h &gt; b b~<br></code></pre></td></tr></table></figure><p>过程的样本。可是这个过程的截面是$0.01607\ \mathrm{pb}$左右。与该样本的截面$0.07924\ \mathrm{pb}$相去甚远。所以我想恐怕是物理过程有区别。</p><p>在McM里，Select View勾选Fragment，可以看到生成样本使用的<code>_cff.py</code>文件。勾选Generator parameters可以看到截面。从cff文件可以看到产生样本使用的card以及pythia8的设置。打开card，发现</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vdecaymode</span>   <span class="hljs-number">11</span>   ! <span class="hljs-number">1</span>: e, <span class="hljs-number">2</span>: mu, <span class="hljs-number">3</span>: tau, <span class="hljs-number">4</span>:nu_e, <span class="hljs-number">5</span>: nu_mu, <span class="hljs-number">6</span>: nu_tau, <span class="hljs-number">0</span>: hadronic, <span class="hljs-number">10</span>: inclusive, <span class="hljs-number">11</span>: inclusive leptons, <span class="hljs-number">12</span>: inclusive neutrinos<br><span class="hljs-attribute">hdecaymode</span>  -<span class="hljs-number">1</span>   ! for PYTHIA or HERWIG: do not decay the Higgs boson<br></code></pre></td></tr></table></figure><p>果然过程不一样。从XSDB里可以看到这个截面是NLO的，那恐怕powheg产生的样本是NLO样本。于是在MG5中</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog">define l+ = e+ mu+ ta+ # <span class="hljs-keyword">default</span> l+ excluded tau<br>define l- = e- mu- ta-<br><span class="hljs-keyword">generate</span> p p &gt; z &gt; h l+ l- [QCD]<br></code></pre></td></tr></table></figure><p>这样产生的过程是NLO的。可以注意到这里Higgs没有衰变。随后在Pythia8的card里设置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">DM_1</span> = <span class="hljs-number">25</span>:m0 = <span class="hljs-number">125.0</span><br><span class="hljs-attr">DM_2</span> = <span class="hljs-number">25</span>:<span class="hljs-literal">on</span>Mode = <span class="hljs-literal">off</span><br><span class="hljs-attr">DM_3</span> = <span class="hljs-number">25</span>:<span class="hljs-literal">on</span>IfMatch = <span class="hljs-number">5</span> -<span class="hljs-number">5</span> <span class="hljs-comment"># Higgs decay to b b~</span><br></code></pre></td></tr></table></figure><p>最后得到的截面为$0.07618 \pm 9.5\times 10^{-5}\ \mathrm{pb}$。结果已经很接近了。但目前还需要确认$\tau$在不在powheg的$Z$的衰变产物内。如果没有$\tau$子恐怕又要头疼一阵了。</p><p>一些可能有用的链接：</p><ul><li><a href="https://twiki.cern.ch/twiki/bin/viewauth/CMS/PowhegBOXPrecompiled">PowhegBOXPrecompiled &lt; CMS &lt; TWiki (cern.ch)</a> powheg的tutorial。目前我试图在HTCondor上提交讲gridpack转换成LHE的作业，一直不成功。暂时没有找到原因。目前只好在lxplus上直接运行，但是速度特别特别慢。</li><li><a href="https://twiki.cern.ch/twiki/bin/viewauth/CMS/HowToGenXSecAnalyzer">HowToGenXSecAnalyzer &lt; CMS &lt; TWiki (cern.ch)</a>可以计算任意CMS官方MC样本的截面。</li><li><a href="https://github.com/cms-sw/genproductions">cms-sw/genproductions: Generator fragments for MC production (github.com)</a> CMSSW关于generator的仓库。有各种各样的MC generator cards(<code>bin/</code>)，Pythia8的参数(<code>genfragments/</code>)和第二个链接的算截面的工具。</li></ul><h2 id="August"><a href="#August" class="headerlink" title="August"></a>August</h2><h3 id="14-1"><a href="#14-1" class="headerlink" title="14"></a>14</h3><p>13日在组会上作了报告，但是反响平平。这一个多月完成了$\sigma(ZH) \times BR(Z \rightarrow l^+ l^-)$的upper limit关于$p_T$的分布图。目前存在三个问题</p><ul><li>如何在lxplus上生成$ZH$的EFT样本？目前这种先写restrict_card，再产生样本的workflow，是无法在lxplus上工作的。</li><li>MG5 reweighting 的原理是什么？怎么用reweighting的方法产生MC样本？怎样找到$ZH$ EFT的benchmark point？</li><li>为什么将信号强度放缩到截面分布的放缩因子是pfjets的截面分布？</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CMS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在高能所lxslc7上配置密钥登录</title>
    <link href="/2021/02/26/%E5%9C%A8%E9%AB%98%E8%83%BD%E6%89%80lxslc7%E4%B8%8A%E9%85%8D%E7%BD%AE%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95/"/>
    <url>/2021/02/26/%E5%9C%A8%E9%AB%98%E8%83%BD%E6%89%80lxslc7%E4%B8%8A%E9%85%8D%E7%BD%AE%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>随着工作量的增大，集群的使用也越来越频繁。可是每次登录都要输密码让我很烦。于是我参照网上的教程和高能所集群使用手册设置密钥登录。</p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>首先在我自己的电脑上生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -f lxslc<br></code></pre></td></tr></table></figure><p>因为我本地的<code>~/.ssh</code>中已经有了Github私钥，为了不覆盖GitHub私钥，需要对文件命名。如果没有其他私钥则不需要指定文件名<code>-f</code>。然后，在<code>~/.ssh</code>中可以看到有<code>lxslc</code>和<code>lxslc.pub</code>两个文件。前者为私钥，后者为公钥。随后将公钥上传到lxslc集群<code>~/.ssh</code>中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp lxslc.pub username@lxslc7.ihep.ac.cn:~/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><p>随后登录到集群，确保<code>authorized_keys</code>文件权限为600。</p><p>修改本地的<code>~/.ssh/config</code>设置，在<code>Host</code>下添加</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">IdentityFile ~<span class="hljs-regexp">/.ssh/</span>lxslc<br></code></pre></td></tr></table></figure><p>下次登录就是密钥登录了。</p><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>可实际上往往没有这么顺利。在我登录集群之后遇到了<code>$HOME</code>目录没有读写权限和X11错误的问题。登录后会出现以下提示</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/xauth:  timeout in locking authority file /</span>afs<span class="hljs-regexp">/ihep.ac.cn/u</span>sers<span class="hljs-regexp">/z/u</span>sername/.Xauthority<br></code></pre></td></tr></table></figure><p>按照高能所计算环境使用手册的FAQ，采取以下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">-bash-4.2$ kinit<br>Password <span class="hljs-keyword">for</span> username@IHEPKRB5:<br>-bash-4.2$ aklog<br>-bash-4.2$ rm -f ~/.Xauthority<br></code></pre></td></tr></table></figure><p>随后退出重新登录即可。</p><h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>我还想对CERN的lxplus集群做类似操作，但根据CERN的指南，不建议使用密钥登录，因为使用这种方法登录后无法访问afs文件系统，只好作罢。CERN推荐使用Kerberos实现免密登录。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>SSH FAQ for CERN：<a href="https://twiki.cern.ch/twiki/bin/view/LinuxSupport/SSHatCERNFAQ">https://twiki.cern.ch/twiki/bin/view/LinuxSupport/SSHatCERNFAQ</a></p><p>高能所计算环境使用手册：<a href="http://afsapply.ihep.ac.cn/cchelp/zh/">http://afsapply.ihep.ac.cn/cchelp/zh/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>环巢湖自驾游</title>
    <link href="/2021/02/24/%E7%8E%AF%E5%B7%A2%E6%B9%96%E8%87%AA%E9%A9%BE%E6%B8%B8/"/>
    <url>/2021/02/24/%E7%8E%AF%E5%B7%A2%E6%B9%96%E8%87%AA%E9%A9%BE%E6%B8%B8/</url>
    
    <content type="html"><![CDATA[<p>环巢湖自驾一圈是我期望已久的。拿到驾照后快有整整一年没有开车了。春节期间恶补了一番，胆子也大了些。叫上朋友，租了一辆evcard，开始了环巢湖之旅。</p>]]></content>
    
    
    
    <tags>
      
      <tag>运转</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/14/hello-world/"/>
    <url>/2021/01/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
